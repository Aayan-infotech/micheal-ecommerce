name: CI/CD Pipeline (GitHub Actions + ArgoCD)

on:
  push:
    branches:
      - main  # Runs when code is pushed to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # GitHub's cloud VM

    steps:
      # 1️⃣ Checkout the GitHub repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2️⃣ Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 3️⃣ Generate Next Image Tag (m1 → m2 → m3 ...)
      - name: Get Latest Tag and Increment
        id: tag
        run: |
          LATEST_TAG=$(curl -s https://hub.docker.com/v2/repositories/amazingatul/ecom-web/tags/ | jq -r '.results[].name' | grep -E '^m[0-9]+$' | sort -V | tail -n1)
          if [ -z "$LATEST_TAG" ]; then
            NEW_TAG="m1"
          else
            NEW_TAG="m$(( ${LATEST_TAG:1} + 1 ))"
          fi
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "New tag will be: $NEW_TAG"

      # 4️⃣ Build the Docker image
      - name: Build Docker Image
        run: docker build -t amazingatul/ecom-web .

      # 5️⃣ Tag the Docker image
      - name: Tag Docker Image
        run: |
          docker tag amazingatul/ecom-web amazingatul/ecom-web:$NEW_TAG
          docker tag amazingatul/ecom-web amazingatul/ecom-web:latest

      # 6️⃣ Push the image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push amazingatul/ecom-web:$NEW_TAG
          docker push amazingatul/ecom-web:latest

      # 7️⃣ Update Kubernetes Manifest (`k8s-deploy.yml`) with the New Image Tag
      - name: Update Image Tag in k8s-deploy.yml
        run: |
          sed -i 's|image: amazingatul/ecom-web:.*|image: amazingatul/ecom-web:'$NEW_TAG'|' k8s/k8s-deploy.yml
          git config --global user.email "ci@github.com"
          git config --global user.name "GitHub Actions"
          git add k8s/k8s-deploy.yml
          git commit -m "Update image to $NEW_TAG"
          git push origin main  # Push changes back to GitHub
