name: CI/CD Pipeline (GitHub Actions + ArgoCD)

on:
  push:
    branches:
      - main  # Runs when code is pushed to main branch

env:
  GITHUB_RUN_URL: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

jobs:
  deploy:
    runs-on: ubuntu-latest  # GitHub's cloud VM

    steps:
      # 1Ô∏è‚É£ Checkout the GitHub repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Run Unit Tests
      - name: Run Unit Tests
        run: |
          npm install --legacy-peer-deps
          npm test

      # 3Ô∏è‚É£ Run Linting
      - name: Run ESLint
        run: npm run lint

      # 4Ô∏è‚É£ Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 5Ô∏è‚É£ Generate Next Image Tag (m1 ‚Üí m2 ‚Üí m3 ...)
      - name: Get Latest Tag and Increment
        id: tag
        run: |
          LATEST_TAG=$(curl -s https://hub.docker.com/v2/repositories/amazingatul/ecom-web/tags/ | jq -r '.results[].name' | grep -E '^m[0-9]+$' | sort -V | tail -n1)
          if [ -z "$LATEST_TAG" ]; then
            NEW_TAG="m1"
          else
            NEW_TAG="m$(( ${LATEST_TAG:1} + 1 ))"
          fi
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "New tag will be: $NEW_TAG"

      # 6Ô∏è‚É£ Build the Docker image
      - name: Build Docker Image
        run: docker build -t amazingatul/ecom-web . 2>&1 | tee failure.log

      # 7Ô∏è‚É£ Tag the Docker image
      - name: Tag Docker Image
        run: |
          docker tag amazingatul/ecom-web amazingatul/ecom-web:$NEW_TAG
          docker tag amazingatul/ecom-web amazingatul/ecom-web:latest

      # 8Ô∏è‚É£ Security Scan with Trivy (Fail if High Vulnerabilities)
      - name: Scan Docker Image with Trivy
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy image --exit-code 1 --severity HIGH,CRITICAL amazingatul/ecom-web:$NEW_TAG

      # 9Ô∏è‚É£ Push the image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push amazingatul/ecom-web:$NEW_TAG
          docker push amazingatul/ecom-web:latest

      # üîü Update Kubernetes Manifest (`k8s-deploy.yml`) with the New Image Tag
      - name: Update Image Tag in k8s-deploy.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sed -i 's|image: amazingatul/ecom-web:.*|image: amazingatul/ecom-web:'$NEW_TAG'|' k8s/k8s-deploy.yml
          git config --global user.email "ci@github.com"
          git config --global user.name "GitHub Actions"
          git add k8s/k8s-deploy.yml
          git commit -m "Update image to $NEW_TAG"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          git push origin main

      # üî• Send Email Notification on Failure
      - name: Send Email on Failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "üö® Deployment Failed"
          body: |
            ‚ùå Oops latest deployment has failed.
            üîç Logs: Attached below.
            üîó GitHub Actions Run: ${{ env.GITHUB_RUN_URL }}
          to: "atulrajput.work@gmail.com"
          from: "development.aayaninfotech@gmail.com"
          attachments: failure.log
