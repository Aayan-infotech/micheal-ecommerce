{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"./address.css\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Address() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [name, setName] = useState(\"\");\n  const [houseNo, setHouseNo] = useState(\"\");\n  const [mobileNumber, setMobileNumber] = useState(\"\");\n  const [pinCode, setPinCode] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [address1, setAddress] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [editIndex, setEditIndex] = useState(null);\n\n  // const token = sessionStorage.getItem(\"token\");\n  // const truncateToken = token.slice(0, 25);\n  const userId = sessionStorage.getItem(\"userId\");\n  useEffect(() => {\n    if (location.state && location.state.address) {\n      const address = location.state.address;\n      setName(address.receiverName);\n      setHouseNo(address.houseNumber);\n      setMobileNumber(address.contactNumber);\n      setPinCode(address.pinCode);\n      setCity(address.city);\n      setState(address.state);\n      setCountry(address.country);\n      setAddress(address.area);\n      setIsEditing(true);\n      setEditIndex(location.state.index);\n    }\n  }, [location.state]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newAddress = {\n      userId: userId,\n      houseNumber: houseNo,\n      state: state,\n      city: city,\n      pinCode: pinCode,\n      contactNumber: mobileNumber,\n      receiverName: name,\n      country: country,\n      area: address1\n    };\n    try {\n      if (isEditing) {\n        const addressId = sessionStorage.getItem(\"addressId\");\n        const response1 = await fetch(`http://3.111.163.2:3129/api/address/update/${addressId}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(newAddress)\n        });\n        const result2 = await response1.json();\n        if (result2.success) {\n          var _location$state;\n          const updatedAddresses = [...(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.allAddresses) || [])];\n          updatedAddresses[editIndex] = newAddress;\n          navigate(\"/shopcheckout\", {\n            state: {\n              addresses: updatedAddresses\n            }\n          });\n        }\n      } else {\n        const response = await fetch(\"http://3.111.163.2:3129/api/address/add\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(newAddress)\n        });\n        const result = await response.json();\n        if (result.success) {\n          var _location$state2;\n          sessionStorage.setItem(\"addressId\", result.data._id);\n          navigate(\"/shopcheckout\", {\n            state: {\n              addresses: [...(((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.allAddresses) || []), newAddress]\n            }\n          });\n        }\n      }\n    } catch (error) {\n      console.error(\"Error adding/updating address:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"ToastContainer\"\n  }, void 0, false);\n}\n_s(Address, \"zLzuI5Z2QRMy/6XrDI+OBawrQYo=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Address;\nexport default Address;\nvar _c;\n$RefreshReg$(_c, \"Address\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","ToastContainer","toast","Fragment","_Fragment","jsxDEV","_jsxDEV","Address","_s","navigate","location","name","setName","houseNo","setHouseNo","mobileNumber","setMobileNumber","pinCode","setPinCode","city","setCity","state","setState","country","setCountry","address1","setAddress","isEditing","setIsEditing","editIndex","setEditIndex","userId","sessionStorage","getItem","address","receiverName","houseNumber","contactNumber","area","index","handleSubmit","e","preventDefault","newAddress","addressId","response1","fetch","method","headers","body","JSON","stringify","result2","json","success","_location$state","updatedAddresses","allAddresses","addresses","response","result","_location$state2","setItem","data","_id","error","console","children","_c","$RefreshReg$"],"sources":["D:/aayan-project/micheal-ecommerce/src/components/address/Address.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport \"./address.css\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction Address() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [name, setName] = useState(\"\");\r\n  const [houseNo, setHouseNo] = useState(\"\");\r\n  const [mobileNumber, setMobileNumber] = useState(\"\");\r\n  const [pinCode, setPinCode] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [address1, setAddress] = useState(\"\");\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n\r\n\r\n  // const token = sessionStorage.getItem(\"token\");\r\n  // const truncateToken = token.slice(0, 25);\r\n  const userId = sessionStorage.getItem(\"userId\");\r\n\r\n  useEffect(() => {\r\n    if (location.state && location.state.address) {\r\n      const address = location.state.address;\r\n      setName(address.receiverName);\r\n      setHouseNo(address.houseNumber);\r\n      setMobileNumber(address.contactNumber);\r\n      setPinCode(address.pinCode);\r\n      setCity(address.city);\r\n      setState(address.state);\r\n      setCountry(address.country);\r\n      setAddress(address.area);\r\n      setIsEditing(true);\r\n      setEditIndex(location.state.index);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    const newAddress = {\r\n      userId: userId,\r\n      houseNumber: houseNo,\r\n      state: state,\r\n      city: city,\r\n      pinCode: pinCode,\r\n      contactNumber: mobileNumber,\r\n      receiverName: name,\r\n      country: country,\r\n      area: address1,\r\n    };\r\n  \r\n    try {\r\n      if (isEditing) {\r\n        const addressId = sessionStorage.getItem(\"addressId\");\r\n        \r\n        const response1 = await fetch(\r\n          `http://3.111.163.2:3129/api/address/update/${addressId}`,\r\n          {\r\n            method: \"PUT\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(newAddress),\r\n          }\r\n        );\r\n        const result2 = await response1.json();\r\n  \r\n        if (result2.success) {\r\n          const updatedAddresses = [...(location.state?.allAddresses || [])];\r\n          updatedAddresses[editIndex] = newAddress; \r\n  \r\n          navigate(\"/shopcheckout\", {\r\n            state: {\r\n              addresses: updatedAddresses,\r\n            },\r\n          });\r\n        }\r\n      } else {\r\n        const response = await fetch(\r\n          \"http://3.111.163.2:3129/api/address/add\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(newAddress),\r\n          }\r\n        );\r\n        const result = await response.json();\r\n        if (result.success) {\r\n          sessionStorage.setItem(\"addressId\", result.data._id);\r\n          \r\n          navigate(\"/shopcheckout\", {\r\n            state: {\r\n              addresses: [...(location.state?.allAddresses || []), newAddress],\r\n            },\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding/updating address:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <>\r\n    ToastContainer\r\n\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nexport default Address;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}