{"ast":null,"code":"var _jsxFileName = \"D:\\\\aayan-project\\\\micheal-ecommerce\\\\src\\\\ProtectedRoute.js\";\n// src/ProtectedRoute.js\nimport React from 'react';\nimport Login from './components/login/Login';\nimport Register from './components/register/Register';\nimport PasswordRecovery from './components/Auth/PasswordRecovery/PasswordRecovery';\nimport Otp from './components/Auth/Otp/Otp';\nimport PasswordReset from './components/Auth/PasswordReset/PasswordReset';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  const token = sessionStorage.getItem('token');\n\n  // If the user is not logged in, display login or register components\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/passwordrecovery\",\n        element: /*#__PURE__*/_jsxDEV(PasswordRecovery, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/otp\",\n        element: /*#__PURE__*/_jsxDEV(Otp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/passwordreset\",\n        element: /*#__PURE__*/_jsxDEV(PasswordReset, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If the user is logged in, render the protected component\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Login","Register","PasswordRecovery","Otp","PasswordReset","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","children","token","sessionStorage","getItem","Route","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/aayan-project/micheal-ecommerce/src/ProtectedRoute.js"],"sourcesContent":["// src/ProtectedRoute.js\r\nimport React from 'react';\r\nimport Login from './components/login/Login';\r\nimport Register from './components/register/Register';\r\nimport PasswordRecovery from './components/Auth/PasswordRecovery/PasswordRecovery';\r\nimport Otp from './components/Auth/Otp/Otp';\r\nimport PasswordReset from './components/Auth/PasswordReset/PasswordReset';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const token = sessionStorage.getItem('token');\r\n\r\n  // If the user is not logged in, display login or register components\r\n  if (!token) {\r\n    return (\r\n      <div>\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/passwordrecovery\" element={<PasswordRecovery />} />\r\n        <Route path=\"/otp\" element={<Otp />} />\r\n        <Route path=\"/passwordreset\" element={<PasswordReset />} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If the user is logged in, render the protected component\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,gBAAgB,MAAM,qDAAqD;AAClF,OAAOC,GAAG,MAAM,2BAA2B;AAC3C,OAAOC,aAAa,MAAM,+CAA+C;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1E,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE7C;EACA,IAAI,CAACF,KAAK,EAAE;IACV,oBACEL,OAAA;MAAAI,QAAA,gBACEJ,OAAA,CAACQ,KAAK;QAACC,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEV,OAAA,CAACN,KAAK;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3Cd,OAAA,CAACQ,KAAK;QAACC,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEV,OAAA,CAACL,QAAQ;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDd,OAAA,CAACQ,KAAK;QAACC,IAAI,EAAC,mBAAmB;QAACC,OAAO,eAAEV,OAAA,CAACJ,gBAAgB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjEd,OAAA,CAACQ,KAAK;QAACC,IAAI,EAAC,MAAM;QAACC,OAAO,eAAEV,OAAA,CAACH,GAAG;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCd,OAAA,CAACQ,KAAK;QAACC,IAAI,EAAC,gBAAgB;QAACC,OAAO,eAAEV,OAAA,CAACF,aAAa;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAEV;;EAEA;EACA,oBAAOd,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACW,EAAA,GAlBIZ,cAAc;AAoBpB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}